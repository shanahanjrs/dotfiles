# Path to your oh-my-zsh installation.
export ZSH=${HOME}/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="jrs"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# User configuration

export PATH="/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/java-7-openjdk-amd64/jre/bin:/usr/local/ec2/ec2-api-tools-1.7.3.2/bin"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias reload='. ~/.zshrc && clear'
alias eth='echo "Eth(usd): $"$(curl -sL https://api.coinmarketcap.com/v1/ticker/ethereum/ | jq ".[0].price_usd" | cut -d\" -f2 )'
alias btc='echo "Btc(usd): $"$(curl -sL https://api.coinmarketcap.com/v1/ticker/bitcoin/ | jq ".[0].price_usd" | cut -d\" -f2 )'
alias ll='ls -hl'
alias lll='ls -hal'
alias c='clear'
alias ..='cd ../'
alias rkhunter='rkhunter --versioncheck --update --autox --skip-keypress --check'
alias svim='sudo vim'
alias cim='vim'
alias ga='git add -A'
alias gs='git status'
alias gd='git diff'
alias gcm='git commit -m'
alias dpa='docker ps -a'
alias di='docker images'
alias PluginInstall='vim +PluginInstall +qall'
alias PluginUpdate='vim +PluginUpdate +qall'

#k8s aliases
alias k="kubectl"
alias kpods="k get pods -o wide"
alias knodes="k get nodes -o wide"
alias kservices="k get services"
alias kd="k get deployments"
alias krc="k get replicationcontroller"
alias ks="k get secrets"
alias klogs="k logs -f"
alias ktail="kubetail"
alias kexec="k exec -it"
alias kdesc="k describe"
alias kwatchpods="watch kubectl get pods -o wide"
alias dnstools="kubectl run -it --rm --restart=Never --image=infoblox/dnstools:latest dnstools"
kcontext() {
  context=$(k config view | grep current-context: | awk 'NF>1{print $NF}')
  ns=$(k config view | grep -A 1 "cluster: $context" | awk 'FNR == 2 {print $2}')
  echo "${context}|${ns}"
}
# kprune()
#
# Need to restart some pods? Dont feel like deleting the deployment
# b/c redeploying it is too hard? Well great, destroy them with kprune.
# This will do a grep against all pods in the current namespace, so be careful!
# But you will be prompted before you obliterate the list of apps.
#
# PS: I dont really the name of the function so im open to suggestions.
# TODO: Add the ability to delete N pods at a time, and sleep for N seconds. This will allow
#       the app to recover a bit, instead of blowing them all away at once :).
kprune() {
  if [[ -z $1 ]] ; then
    echo "Must specify pod search"
    return
  fi
  pods=( $(kubectl get pods | grep $1 | awk 'FNR > 0 {print $1}') )
  echo "${#pods[@]} Pods Found ... staging for deletion."
  printf '\t%s\n' "${pods[@]}"
  echo -n "Are you sure you want to delete? (y/n): "
  read delete
  if [[ "$delete" = "y" ]] ; then
    for (( i=0; i<${#pods[@]}; i++ )); do
      kubectl delete pod ${pods[i]}
    done
  else
    echo "Cancelling ..."
  fi
}
kcon() {
 k exec -it $1 /bin/$2
}
kswitch() {
 k config use-context $1
}
kreveal() {
  k get secret $1 -o=yaml
}
kns() {
 # 1: namespace
 # 2: context (dev / senna) defaults to dev
 context=$2
 if [[ -z $context ]] ; then
  context="coulthard"
 fi
 k config set-context $context --namespace=$1
}
kdelete() {
 k delete service,pod,rc,deployments $1
}
kstats() {
 nodes=( $(k get nodes | awk 'FNR > 1 {print $1}') )
 for (( i=0; i<${#nodes[@]}; i++ )); do
  k describe node ${nodes[i]};
  #| sed -n -e '/Namespace/,$p'
 done
}

# vi mode
bindkey -v

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# Automatically update oh my zsh
DISABLE_UPDATE_PROMPT=true


